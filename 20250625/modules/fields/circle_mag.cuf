!const 의존

module circle_mag
  use constants_gc
  implicit none

contains   

  subroutine CircleB(x, y, z, Bx, By, Bz)   !원형 전류 자기장
    real(8), value :: x, y, z
    real(8), intent(out) :: Bx, By, Bz
    real(8), dimension(3) :: r   !변위
    real(8), dimension(3) :: dB
    real(8) :: theta, dtheta, r2
    real(8), dimension(3) :: dr
    integer :: istep
    integer, parameter :: dn
    dn=1000   !자기장 적분 단계 수
    Bx=0.d0
    By=0.d0
    Bz=0.d0  
    theta=0.0d0
    dtheta= 2.d0 * pi / dn
    do istep=1,dn

      theta=dtheta * istep
      r(1) = x - radius*cos(theta)
      r(2) = y - radius*sin(theta)
      r(3) = z
      

      dr=radius*dtheta*(/-sin(theta), cos(theta), 0.d0/)
      r2= r(1)**2 + r(2)**2 + r(3)**2
      if (r2 == 0.d0) then     ! 이 케이스는 아님!

        dB(1) = 0.d0
        dB(2) = 0.d0
        dB(3) = 0.d0
      else
        call cross(dr,r,dB)  ! 외적 계산

        dB=dB/r2**(3.d0/2.d0)  

      end if
      Bx = Bx + dB(1)
      By = By + dB(2)
      Bz = Bz + dB(3)
   !비오사바르 적분
    end do

    Bx=Bx * mu0 * I / (4.d0 * pi)
    By=By * mu0 * I / (4.d0 * pi)
    Bz=Bz * mu0 * I / (4.d0 * pi)   !계수 곱해주기

  end subroutine CircleB
end module circle_mag