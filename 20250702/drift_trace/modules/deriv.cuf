module deriv
  use constants
  use electric_field
  use magnetic_field
  implicit none
contains
  subroutine compute_deriv(r, v, drdt, dvdt)
    real(8), dimension(3), intent(in)  :: r, v
    real(8), dimension(3), intent(out) :: drdt, dvdt
    real(8) :: Bx, By, Bz, Ex, Ey, Ez
    ! call Efield(r(1), r(2), r(3), Ex, Ey, Ez)
    call Bfield(r(1), r(2), r(3), Bx, By, Bz)   !직선 전류
    ! call Bfield2(r(1), r(2), r(3), Bx2, By2, Bz2)   중첩 때만
    ! Bx=Bx+Bx2
    ! By=By+By2
    ! Bz=Bz+Bz2
    drdt = v
    dvdt(1) = (q/m)*(v(2)*Bz - v(3)*By)
    dvdt(2) = (q/m)*(v(3)*Bx - v(1)*Bz)
    dvdt(3) = (q/m)*(v(1)*By - v(2)*Bx)
  end subroutine compute_deriv
  subroutine field_deriv(r, drdt)  
    real(8), dimension(3), intent(in)  :: r
    real(8), dimension(3), intent(out) :: drdt
    real(8) :: Bx, By, Bz, Bx2, By2, Bz2, Bmag

    call Bfield2(r(1), r(2), r(3), Bx, By, Bz)

    Bmag=sqrt(Bx**2 + By**2 + Bz**2)
    drdt = dt* (/Bx/Bmag, By/Bmag, Bz/Bmag/)

  end subroutine field_deriv
end module deriv
